---
- name: Create local kubeconfig directory
  ansible.builtin.file:
    path: "{{ user_kube_dir }}"
    state: directory
    mode: "0755"

- name: Set owner of local kubeconfig directory to {{ ansible_user }}
  become: true
  ansible.builtin.file:
    path: "{{ user_kube_dir }}"
    state: directory
    owner: "{{ ansible_user }}"
    recurse: true

- name: Generate User Private Key
  community.crypto.openssl_privatekey:
    path: "{{ user_key }}"
    size: 2048

- name: Generate User CSR
  community.crypto.openssl_csr:
    path: "{{ user_csr }}"
    privatekey_path: "{{ user_key }}"
    common_name: "{{ cluster_user }}"

- name: Get admin kubeconfig
  changed_when: true
  ansible.builtin.command: talosctl -e {{ cluster_vip }} -n {{ cluster_vip }} kubeconfig -f

- name: Delete Any Existing User CSR Objects
  kubernetes.core.k8s:
    state: absent
    api_version: certificates.k8s.io/v1
    kind: CertificateSigningRequest
    name: "{{ cluster_user }}"

- name: Create User CSR Object
  kubernetes.core.k8s:
    state: present
    template: csr-user.yaml.j2
  vars:
    user_csr_base64: "{{ lookup('file', '{{ user_csr }}') | b64encode }}"

- name: Install kubectl locally
  become: true
  community.general.snap:
    name: kubectl
    classic: true

- name: Approve User CSR
  ansible.builtin.command: kubectl certificate approve {{ cluster_user }}
  changed_when: true

- name: Get User Certificate
  kubernetes.core.k8s_info:
    api_version: certificates.k8s.io/v1
    kind: CertificateSigningRequest
    name: "{{ cluster_user }}"
  register: user_cert

- name: Get Cluster Certificate
  kubernetes.core.k8s_info:
    api_version: v1
    kind: ConfigMap
    name: kube-root-ca.crt
    namespace: kube-system
  register: user_cluster_cert

- name: Save User Certificate
  ansible.builtin.copy:
    content: "{{ user_cert.resources[0].status.certificate | b64decode }}"
    dest: "{{ user_crt }}"
    mode: "0644"

- name: Save Cluster Certificate
  ansible.builtin.copy:
    content: "{{ user_cluster_cert.resources[0]['data']['ca.crt'] }}"
    dest: "{{ user_api_crt }}"
    mode: "0644"

- name: Create User Cluster Role Binding
  kubernetes.core.k8s:
    state: present
    template: clusterrolebinding-user.yaml

- name: Create User Kubeconfig
  ansible.builtin.template:
    src: user-kubeconfig.yaml
    dest: "{{ user_kube_dir }}/config"
    mode: "0600"
