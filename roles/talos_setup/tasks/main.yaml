---
- name: Create Talos config directory
  ansible.builtin.file:
    path: "{{ talos_config_dir }}"
    state: directory
    mode: '0700'

- name: Check if secrets exist
  ansible.builtin.stat:
    path: "{{ talos_config_dir }}/secrets.yaml"
  register: secrets_file

- name: Generate Secrets
  when: not secrets_file.stat.exists
  ansible.builtin.command: talosctl gen secrets --output-file "{{ talos_config_dir }}/secrets.yaml"

- name: Get Talos Image ID
  ansible.builtin.uri:
    url: https://factory.talos.dev/schematics
    method: POST
    src: customization.yaml
    status_code: 201
  register: factory_response

- name: Create control node machine configs
  loop: "{{ node_names }}"
  include_tasks: gen-config.yaml

- name: Generate Talos config
  ansible.builtin.command: >
    talosctl gen config --force
    --with-secrets "{{ talos_config_dir }}/secrets.yaml"
    --output-types=talosconfig
    --output "{{ talos_config_dir }}/talosconfig"
    "{{ cluster_host }}" "https://kube.{{ cluster_domain }}:{{ cluster_port }}"

- name: Add nodes to Talos config
  ansible.builtin.command: >
    talosctl "--talosconfig={{ talos_config_dir }}/talosconfig"
    config node "{{ node_names | product(['.' + local_domain]) | map('join') | join(' ') }}"

- name: Add endpoints to Talos config
  ansible.builtin.command: >
    talosctl "--talosconfig={{ talos_config_dir }}/talosconfig"
    config endpoint "{{ node_names | product(['.' + local_domain]) | map('join') | join(' ') }}"

- name: Save Talos config
  ansible.builtin.command: >
    talosctl config merge "{{ talos_config_dir }}/talosconfig"

- name: Print ISO download link
  ansible.builtin.debug:
    msg: "https://factory.talos.dev/image/{{ factory_response.json.id }}/v{{ talos_version }}/metal-amd64.iso"
